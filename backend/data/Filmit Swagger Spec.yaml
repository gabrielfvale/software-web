---
openapi: 3.0.3
info:
  title: Filmit API
  version: 1.0.0
tags:
- name: Root
- name: Movie
- name: List
- name: Review
- name: User
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
    Genre:
      type: object
      properties:
        id:
          type: integer
          description: Genre ID
        name:
          type: string
          description: Genre name
    Cast:
      type: object
      properties:
        name:
          type: string
          description: Person name
        profile_path:
          type: string
          description: Person picture path
        character:
          type: string
          description: Character played
    Movie:
      type: object
      properties:
        id:
          type: integer
          description: Movie ID
        backdrop_path:
          type: string
          description: Movie backdrop path
        poster_path:
          type: string
          description: Movie poster path
        title:
          type: string
          description: Movie title
        tagline:
          type: string
          description: Movie tagline
        overview:
          type: string
          description: Movie overview text
        genres:
          type: array
          items:
            "$ref": "#/components/schemas/Genre"
        release_date:
          type: string
          description: Movie release date YYYY-MM-DD
    List:
      type: object
      properties:
        list_id:
          type: integer
        user_id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        list_type:
          type: string
          enum:
          - private
          - public
          - admin
        likes:
          type: integer
        movies:
          type: array
          items:
            type: integer
    Review:
      type: object
      properties:
        review_id:
          type: integer
        user_id:
          type: integer
        score:
          type: number
          multipleOf: 0.1
        description:
          type: string
        like:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Comment:
      type: object
      properties:
        comment_id:
          type: integer
        user_id:
          type: integer
        review_id:
          type: integer
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    User:
      type: object
      properties:
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
        bio:
          type: string
paths:
  "/health":
    get:
      tags:
      - Root
      summary: API health status
      responses:
        '200':
          description: Database and TMDB OK
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/movie/{id}":
    get:
      tags:
      - Movie
      summary: Movie details by id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Movie ID
      responses:
        '200':
          description: Movie details returned
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Movie"
                - type: object
                  properties:
                    cast:
                      type: array
                      items:
                        "$ref": "#/components/schemas/Cast"
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/movie/discover":
    get:
      tags:
      - Movie
      summary: Discover movies with filters
      parameters:
      - in: query
        schema:
            type: string
        name: page
        description: Desired page
      - in: query
        name: sort_by
        description: Sort movies
        schema:
          type: string
          enum:
          - popularity.asc
          - popularity.desc
          - release_date.asc
          - release_date.desc
          - revenue.asc
          - revenue.desc
          - primary_release_date.asc
          - primary_release_date.desc
          - original_title.asc
          - original_title.desc
          - vote_average.asc
          - vote_average.desc
          - vote_count.asc
          - vote_count.desc
      - in: query
        name: release_date.gte
        schema:
          type: string
        description: Filter movies with release date greater or equal than parameter
      - in: query
        schema:
            type: string
        name: release_date.lte
        description: Filter movies with release date less or equal than parameter
      - in: query
        schema:
            type: string
        name: year
        description: Filter movies from specified year
      - in: query
        schema:
            type: string
        name: with_genres
        description: Comma separated genre list to include
      - in: query
        schema:
            type: string
        name: without_genres
        description: Comma separated genre list to exclude
      responses:
        '200':
          description: Discover search returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  total_results:
                    type: integer
                  results:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Movie"
        '400':
          description: Invalid search parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/movie/popular":
    get:
      tags:
      - Movie
      summary: Paginated list of popular movies
      parameters:
      - in: query
        schema:
            type: string
        name: page
        description: Desired page
      responses:
        '200':
          description: Discover search returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  total_results:
                    type: integer
                  results:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Movie"
        '400':
          description: Invalid page parameter
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/movie/{id}/recommendations":
    get:
      tags:
      - Movie
      summary: Paginated list of recommended movies
      parameters:
      - in: path
        schema:
            type: string
        name: id
        required: true
        description: Movie ID to search similar
      - in: query
        schema:
            type: string
        name: page
        description: Desired page
      responses:
        '200':
          description: Discover search returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  total_results:
                    type: integer
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre_ids:
                          type: array
                          items:
                            type: integer
                        release_date:
                          type: string
                        poster_path:
                          type: string
                        backdrop_path:
                          type: string
        '400':
          description: Invalid page parameter
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/list/{id}":
    get:
      tags:
      - List
      summary: List by id
      parameters:
      - in: path
        required: true
        schema:
            type: string
        name: id
        description: List ID
      responses:
        '200':
          description: List returned
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/List"
  "/list/popular":
    get:
      tags:
      - List
      summary: Popular lists
      parameters:
      - in: query
        schema:
            type: string
        name: page
      responses:
        '200':
          description: List returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  total_results:
                    type: integer
                  results:
                    type: array
                    items:
                      "$ref": "#/components/schemas/List"
  "/list":
    post:
      security:
      - bearerAuth: []
      tags:
      - List
      summary: Create a list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/List"
      responses:
        '201':
          description: List created
        '401':
          description: User is not authenticated
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      security:
      - bearerAuth: []
      tags:
      - List
      summary: Update a list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/List"
      responses:
        '201':
          description: List updated
        '401':
          description: User is not authenticated
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      security:
      - bearerAuth: []
      tags:
      - List
      summary: Delete a list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: integer
      responses:
        '200':
          description: List deleted
        '401':
          description: User is not authenticated
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/review/{movie_id}":
    get:
      tags:
      - Review
      summary: Review by movie id
      parameters:
      - in: path
        required: true
        schema:
            type: string
        name: movie_id
        description: Movie ID
      responses:
        '200':
          description: Reviews returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  total_results:
                    type: integer
                  results:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Review"
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/review/popular":
    get:
      tags:
      - Review
      summary: Reviews sorted by popularity
      parameters:
      - in: query
        schema:
            type: string
        name: page
        description: Desired page
      responses:
        '200':
          description: Popular reviews returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  total_results:
                    type: integer
                  results:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Review"
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/review/{review_id}/comments":
    get:
      tags:
      - Review
      summary: Review's comments by review id
      parameters:
      - in: query
        schema:
            type: string
        name: page
        description: Desired page
      responses:
        '200':
          description: Comments returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  total_pages:
                    type: integer
                  total_results:
                    type: integer
                  results:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Comment"
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/review":
    post:
      security:
      - bearerAuth: []
      tags:
      - Review
      summary: Create a review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Review"
      responses:
        '201':
          description: Review created
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      security:
      - bearerAuth: []
      tags:
      - Review
      summary: Update a review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Review"
      responses:
        '200':
          description: Review updated
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      security:
      - bearerAuth: []
      tags:
      - Review
      summary: Delete a review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                review_id:
                  type: integer
      responses:
        '200':
          description: Review deleted
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/review/comment":
    post:
      security:
      - bearerAuth: []
      tags:
      - Review
      summary: Create a comment in a review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Comment"
      responses:
        '201':
          description: Comment created
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    put:
      security:
      - bearerAuth: []
      tags:
      - Review
      summary: Update a Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Comment"
      responses:
        '200':
          description: Comment updated
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      security:
      - bearerAuth: []
      tags:
      - Review
      summary: Delete a comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                review_id:
                  type: integer
      responses:
        '200':
          description: Review deleted
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/review/like":
    post:
      security:
      - bearerAuth: []
      tags:
      - Review
      summary: Like or unlike a review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                review_id:
                  type: integer
      responses:
        '201':
          description: Review liked/unliked
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/profile/{username}":
    get:
      security:
      - bearerAuth: []
      tags:
      - User
      summary: Profile by username
      parameters:
      - in: path
        required: true
        schema:
            type: string
        name: username
      responses:
        '200':
          description: User profile returned
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/User"
                - type: object
                  properties:
                    admin:
                      type: boolean
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/profile/{username}/stats":
    get:
      tags:
      - User
      summary: Profile statistics by username
      parameters:
      - in: path
        required: true
        schema:
            type: string
        name: username
      responses:
        '200':
          description: User statistics returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies_reviewd:
                    type: integer
                  lists_created:
                    type: integer
                  likes_received:
                    type: integer
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/profile":
    put:
      security:
      - bearerAuth: []
      tags:
      - User
      summary: Update profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/User"
      responses:
        '200':
          description: User profile updated
        '404':
          description: Resource not found error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/auth/sign-up":
    post:
      tags:
      - User
      summary: Sign up to an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/schemas/User"
              - type: object
                properties:
                  password:
                    type: string
      responses:
        '200':
          description: Sign up successful
        '400':
          description: Invalid fields
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/auth/sign-in":
    post:
      tags:
      - User
      summary: Sign in to existing account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Sign in successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires_at:
                    type: string
                  expires_in:
                    type: string
        '400':
          description: Username or password invalid
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
